<UserControl
  x:Class="Rentopoly.Rentals.ViewRentalsView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:Rentopoly.Rentals"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  d:DataContext="{d:DesignInstance Type=local:ViewRentalsViewModel,
                                   IsDesignTimeCreatable=False}"
  d:DesignHeight="450"
  d:DesignWidth="800"
  Loaded="UserControl_Loaded"
  mc:Ignorable="d">
  <Grid>
    <DataGrid
      AutoGenerateColumns="False"
      IsReadOnly="True"
      ItemsSource="{Binding Rentals}">
      <DataGrid.Columns>
        <DataGridTextColumn Binding="{Binding LoanedTo}" Header="Loaned To">
          <DataGridTextColumn.ElementStyle>
            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
              <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
          </DataGridTextColumn.ElementStyle>
        </DataGridTextColumn>
        <DataGridTextColumn Binding="{Binding LoanedOn}" Header="On">
          <DataGridTextColumn.ElementStyle>
            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
              <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
          </DataGridTextColumn.ElementStyle>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Games" />
        <DataGridTemplateColumn CanUserSort="False">
          <DataGridTemplateColumn.CellStyle>
            <Style TargetType="DataGridCell">
              <Setter Property="materialDesign:DataGridAssist.CellPadding" Value="0" />
            </Style>
          </DataGridTemplateColumn.CellStyle>
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate DataType="{x:Type local:RentalItemViewModel}">
              <Button Command="{Binding ReturnedCommand}" Content="Mark Returned" />
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
      </DataGrid.Columns>
    </DataGrid>

    <Button
      Margin="3"
      HorizontalAlignment="Right"
      VerticalAlignment="Top"
      Command="{Binding RefreshCommand}"
      Style="{StaticResource MaterialDesignPaperLightButton}">
      <!--
        All of this is jus tto make the icon inside of the button spin while we are loading.
      -->
      <Button.Content>
        <materialDesign:PackIcon Kind="Refresh" RenderTransformOrigin="0.5,0.5">
          <materialDesign:PackIcon.RenderTransform>
            <RotateTransform x:Name="RefreshRotateTransform" />
          </materialDesign:PackIcon.RenderTransform>
          <materialDesign:PackIcon.Style>
            <Style BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}" TargetType="materialDesign:PackIcon">
              <Style.Triggers>
                <DataTrigger Binding="{Binding RefreshCommand.IsRunning}" Value="True">
                  <DataTrigger.EnterActions>
                    <BeginStoryboard Name="StartSpin">
                      <BeginStoryboard.Storyboard>
                        <Storyboard RepeatBehavior="Forever">
                          <DoubleAnimation
                            Storyboard.TargetProperty="RenderTransform.Angle"
                            From="0"
                            To="360" />
                        </Storyboard>
                      </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                  </DataTrigger.EnterActions>
                  <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="StartSpin" />
                  </DataTrigger.ExitActions>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </materialDesign:PackIcon.Style>
        </materialDesign:PackIcon>
      </Button.Content>
    </Button>

    <ProgressBar
      IsIndeterminate="True"
      Style="{StaticResource MaterialDesignCircularProgressBar}"
      Visibility="{Binding RefreshCommand.IsRunning, Converter={StaticResource BooleanToVisibilityConverter}}"
      Value="0" />
  </Grid>
</UserControl>
